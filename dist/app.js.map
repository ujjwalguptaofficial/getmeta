{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/change_img.ts","webpack:///./src/fetch_meta.ts","webpack:///./src/index.ts","webpack:///./src/print_tag.ts","webpack:///external \"cli-spinner\"","webpack:///external \"commander\"","webpack:///external \"pending-xhr-puppeteer\"","webpack:///external \"puppeteer\""],"names":[],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// import { getImgExtensionFromUrl } from \"./get_extension_from_url\";\n\nexport const changeImageSize = async function (\n    dataUrl: string,\n    width: number,\n    height: number,\n    quality: number = 1   // e.g. 0.9 = 90% quality\n): Promise<string> {\n\n    const getImgExtensionFromUrl = (url: string) => {\n        const extension = [\"jpg\", \"jpeg\", \"png\", \"svg\", \"webp\"];\n        return extension.find(q => url.includes(q));\n    };\n\n    function getImage(dataUrl: string): Promise<HTMLImageElement> {\n        return new Promise((resolve, reject) => {\n            // add current data for caching issue\n            // if (dataUrl.includes('http')) {\n            //     dataUrl = addParameterToURL(dataUrl, 'cors', Date.now());\n            // }\n            const image = new Image();\n            image.src = dataUrl;\n            image.crossOrigin = \"true\";\n            image.onload = () => {\n                resolve(image);\n            };\n            // image.onerror = (el: any, err: ErrorEvent) => {\n            //     reject(err.error);\n            // };\n        });\n    }\n\n    // Create a temporary image so that we can compute the height of the image.\n    const image = await getImage(dataUrl);\n    const imageType = `image/${getImgExtensionFromUrl(dataUrl)}`;\n    // Create a temporary canvas to draw the downscaled image on.\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n\n    // Draw the downscaled image on the canvas and return the new data URL.\n    const ctx = canvas.getContext('2d')!;\n    ctx.drawImage(image, 0, 0, width, height);\n    const newDataUrl = canvas.toDataURL(imageType, quality);\n    return newDataUrl;\n}\n\nexport const crop = function (url, aspectRatio) {\n\n    // we return a Promise that gets resolved with our canvas element\n    return new Promise(resolve => {\n        debugger;\n        // this image will hold our source image data\n        const inputImage = new Image();\n\n        // we want to wait for our image to load\n        inputImage.onload = () => {\n            debugger;\n\n            // let's store the width and height of our image\n            const inputWidth = inputImage.naturalWidth;\n            const inputHeight = inputImage.naturalHeight;\n\n            // get the aspect ratio of the input image\n            const inputImageAspectRatio = inputWidth / inputHeight;\n\n            // if it's bigger than our target aspect ratio\n            let outputWidth = inputWidth;\n            let outputHeight = inputHeight;\n            if (inputImageAspectRatio > aspectRatio) {\n                outputWidth = inputHeight * aspectRatio;\n            } else if (inputImageAspectRatio < aspectRatio) {\n                outputHeight = inputWidth / aspectRatio;\n            }\n\n            // calculate the position to draw the image at\n            const outputX = (outputWidth - inputWidth) * .5;\n            const outputY = (outputHeight - inputHeight) * .5;\n\n            // create a canvas that will present the output image\n            const outputImage = document.createElement('canvas');\n\n            // set it to the same size as the image\n            outputImage.width = outputWidth;\n            outputImage.height = outputHeight;\n\n            // draw our image at position 0, 0 on the canvas\n            const ctx = outputImage.getContext('2d');\n            ctx.drawImage(inputImage, outputX, outputY);\n            document.body.appendChild(outputImage);\n\n            // resolve(outputImage);\n            resolve(outputImage.toDataURL(\"image/png\"));\n        };\n\n        // start loading our image\n        inputImage.src = url;\n    })\n\n}","import puppeteer from \"puppeteer\";\nconst { PendingXHR } = require('pending-xhr-puppeteer');\nimport { Spinner } from \"cli-spinner\";\nimport { printTag } from \"./print_tag\";\nimport { changeImageSize, crop } from \"./change_img\";\n\n\nexport const fetchMeta = async (url: string, shouldPreview) => {\n    const spinner = new Spinner(`Fetching.. %s`);\n    // spinner. spinnerInstance = new Spinner(`${text}.. %s`);\n    spinner.setSpinnerString(18);\n    spinner.start();\n    var prefix = 'http://';\n    if (url.indexOf(\"http\") < 0) {\n        url = prefix + url;\n    }\n    try {\n        const browser = await puppeteer.launch({\n            headless: !shouldPreview,\n            devtools: true\n        });\n        let page = await browser.newPage();\n        const pendingXHR = new PendingXHR(page)\n        await page.goto(url);\n        // await page.waitForNavigation({ waitUntil: \"networkidle0\" });\n        await pendingXHR.waitForAllXhrFinished();\n        await new Promise((res) => {\n            setTimeout(res, 2000);\n        })\n        const result = await page.evaluate(() => {\n            const head = document.head;\n            const title = document.querySelector(\"title\");\n            const description = head.querySelector('meta[name=description]') as HTMLMetaElement;\n            const keywords = head.querySelector('meta[property=keywords]') as HTMLMetaElement;\n\n            const ogTitle = head.querySelector('meta[property=\"og:title\"]') as HTMLMetaElement;\n            const ogDescription = head.querySelector('meta[property=\"og:description\"]') as HTMLMetaElement;\n            const ogSiteName = head.querySelector('meta[property=\"og:site_name\"]') as HTMLMetaElement;\n            const ogImage = head.querySelector('meta[property=\"og:image\"]') as HTMLMetaElement;\n            const ogImageWidth = head.querySelector('meta[property=\"og:image:width\"]') as HTMLMetaElement;\n            const ogImageHeight = head.querySelector('meta[property=\"og:image:height\"]') as HTMLMetaElement;\n            const ogType = head.querySelector('meta[property=\"og:type\"]') as HTMLMetaElement;\n            const ogUrl = head.querySelector('meta[property=\"og:url\"]') as HTMLMetaElement;\n            const fbAppId = head.querySelector('meta[property=\"fb:app_id\"]') as HTMLMetaElement;\n\n            const twitterSite = head.querySelector('meta[name=\"twitter:site\"]') as HTMLMetaElement;\n            const twitterTitle = head.querySelector('meta[name=\"twitter:title\"]') as HTMLMetaElement;\n            const twitterDescription = head.querySelector('meta[name=\"twitter:description\"]') as HTMLMetaElement;\n            const twitterImage = head.querySelector('meta[name=\"twitter:image\"]') as HTMLMetaElement;\n            const twitterCard = head.querySelector('meta[name=\"twitter:card\"]') as HTMLMetaElement;\n            const twitterImageAlt = head.querySelector('meta[name=\"twitter:image:alt\"]') as HTMLMetaElement;\n\n            return {\n                general: {\n                    title: title ? title.innerText : null,\n                    descripton: description ? description.content : null,\n                    keywords: keywords ? keywords.content : null,\n                },\n                facebook: {\n                    \"og:title\": ogTitle ? ogTitle.content : null,\n                    \"og:description\": ogDescription ? ogDescription.content : null,\n                    \"og:site_name\": ogSiteName ? ogSiteName.content : null,\n                    \"og:image\": ogImage ? ogImage.content : null,\n                    \"og:image:width\": ogImageWidth ? ogImageWidth.content : null,\n                    \"og:image:height\": ogImageHeight ? ogImageHeight.content : null,\n                    \"og:type\": ogType ? ogType.content : null,\n                    \"og:url\": ogUrl ? ogUrl.content : null,\n                    \"fb:app_id\": fbAppId ? fbAppId.content : null,\n                },\n                twitter: {\n                    \"twitter:site\": twitterSite ? twitterSite.content : null,\n                    \"twitter:title\": twitterTitle ? twitterTitle.content : null,\n                    \"twitter:description\": twitterDescription ? twitterDescription.content : null,\n                    \"twitter:image\": twitterImage ? twitterImage.content : null,\n                    \"twitter:card\": twitterCard ? twitterCard.content : null,\n                    \"twitter:image:alt\": twitterImageAlt ? twitterImageAlt.content : null,\n                }\n\n\n            }\n        })\n        spinner.stop();\n        console.log(`\n    \n        `);\n        const location = await page.evaluate(() => {\n            return window.location;\n        })\n        await page.close();\n        if (shouldPreview) {\n            page = (await browser.pages())[0];\n            // await page.exposeFunction(\"changeImageSize\", changeImageSize);\n            await page.evaluate(({ og, changeImageSize, location }) => {\n                debugger;\n                eval(\"changeImageSize = \" + changeImageSize)\n                let imgUrl = og[\"og:image\"];\n                if (imgUrl) {\n                    if (imgUrl.indexOf(\"http\") < 0) {\n                        imgUrl = location.origin + imgUrl;\n                    }\n                }\n                debugger;\n                changeImageSize(imgUrl, 1).then(img => {\n                    document.body.innerHTML = `<h2>WhatsApp</h2>\n                    <img src=\"${img}\"/>\n                `;\n                })\n\n            }, {\n                changeImageSize: crop.toString(),\n                og: result.facebook,\n                location\n            } as any)\n\n        }\n        else {\n            printTag(result);\n            await browser.close();\n        }\n\n    } catch (error) {\n        spinner.stop();\n        console.error(\"some error occured\");\n        console.error(\"Error message is\", error.message);\n        console.info(\"please contact author of this Project\");\n        process.exit();\n    }\n}","import { fetchMeta } from \"./fetch_meta\";\n\nconst { Command } = require('commander');\nconst program = new Command();\n\nprogram\n    .option('-url, --url <value>', 'absolute url of website')\n    .option('-preview, --preview', 'preview tags in different popular application like whatsapp, facebook, twitter etc.');\n\nprogram.parse(process.argv);\n\nif (program.url) {\n    fetchMeta(program.url, program.preview != null);\n}","export function printTag(tagMap) {\n\n    const print = (message) => {\n        console.log(message);\n    }\n\n    for (const category in tagMap) {\n        const categoryContent = tagMap[category];\n        if (Object.keys(categoryContent).length == 0) {\n            return;\n        }\n        console.log(`--------------------------${category}------------------------------`);\n        console.log(\"\");\n        for (const meta in categoryContent) {\n            const metaContent = categoryContent[meta];\n            if (metaContent) {\n                console.log(`${meta} : \"${metaContent}\"`);\n                console.log(\"\");\n            }\n        }\n    }\n}","module.exports = require(\"cli-spinner\");","module.exports = require(\"commander\");","module.exports = require(\"pending-xhr-puppeteer\");","module.exports = require(\"puppeteer\");"],"sourceRoot":""}